{"version":3,"sources":["services.js","App.js","index.js"],"names":["baseUrl","service","getAll","axios","get","create","nameObject","post","update","idKey","put","Notification","message","type","className","Filter","newSearch","handleSearchChange","value","onChange","Display","array","deletePerson","filteredPersons","filter","person","name","toLocaleLowerCase","includes","map","number","onClick","id","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","notifMsg","setNotifMsg","typeNotif","setTypeNotif","useEffect","personService","then","response","data","event","target","preventDefault","find","element","window","confirm","wantToReplace","changedNumber","replaceNumber","setTimeout","concat","url","wantToDelete","delete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b87997a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (nameObject) => {\r\n  return axios.post(baseUrl, nameObject);\r\n};\r\n\r\nconst update = (nameObject, idKey) => {\r\n  return axios.put(`${baseUrl}/${idKey}`, nameObject);\r\n};\r\n\r\nconst service = { getAll, create, update };\r\nexport default service;\r\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport personService from \"./services\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) return null;\n  if (type === \"error\") {\n    return <div className=\"error\">{message}</div>;\n  } else if (type === \"notif\") {\n    return <div className=\"notif\">{message}</div>;\n  } else {\n    return <div className=\"update\">{message}</div>;\n  }\n};\n\nconst Filter = ({ newSearch, handleSearchChange }) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input value={newSearch} onChange={handleSearchChange} />\n    </div>\n  );\n};\n\nconst Display = ({ array, newSearch, deletePerson }) => {\n  //console.log(array);\n  const filteredPersons =\n    newSearch === \"\"\n      ? array\n      : array.filter((person) =>\n          person.name\n            .toLocaleLowerCase()\n            .includes(newSearch.toLocaleLowerCase())\n        );\n  return (\n    <div>\n      {filteredPersons.map((array) => (\n        <p key={array.id}>\n          {array.name} {array.number}\n          <button onClick={() => deletePerson(array.id)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  addName,\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [notifMsg, setNotifMsg] = useState(null);\n  const [typeNotif, setTypeNotif] = useState(\"\");\n\n  useEffect(() => {\n    //console.log(\"effect\");\n    personService.getAll().then((response) => {\n      //console.log(\"promise fullfiled\");\n      setPersons(response.data);\n    });\n  }, []);\n\n  const replaceNumber = (newNumber) => {\n    const wantToReplace = persons.find((array) => array.name === newName);\n    const changedNumber = { ...wantToReplace, number: newNumber };\n\n    personService.update(changedNumber, wantToReplace.id);\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    if (persons.find((element) => element.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, do you want to replace the old number with a new one?`\n        )\n      ) {\n        replaceNumber(newNumber);\n        setTypeNotif(\"update\");\n        setNotifMsg(`${newName}'s number has been replaced.`);\n        setTimeout(() => setNotifMsg(null), 5000);\n        //window.location.reload();\n      } else {\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personService.create(nameObject).then((response) => {\n        setPersons(persons.concat(response.data));\n        setTypeNotif(\"notif\");\n        setNotifMsg(`${newName}'s number has been added.`);\n        setTimeout(() => setNotifMsg(null), 5000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const deletePerson = (idKey) => {\n    if (window.confirm(\"Are you sure?\")) {\n      const url = `http://localhost:3001/persons/${idKey}`;\n      const wantToDelete = persons.find((array) => array.id === idKey);\n\n      axios\n        .delete(url, wantToDelete)\n        .catch((error) => {\n          setTypeNotif(\"error\");\n          setNotifMsg(\n            `Information of ${wantToDelete.name} has already been removed from server.`\n          );\n          setTimeout(() => setNotifMsg(null), 5000);\n        })\n        .then(() => {\n          setTypeNotif(\"notif\");\n          setNotifMsg(`${wantToDelete.name}'s number has been deleted`);\n          setTimeout(() => setNotifMsg(null), 5000);\n        });\n    }\n    //window.location.reload();\n  };\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    //console.log(event.target.value);\n    setNewSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <Notification message={notifMsg} type={typeNotif} />\n      <h2>Phonebook</h2>\n      <Filter newSearch={newSearch} handleSearchChange={handleSearchChange} />\n      <br />\n      <h3>Add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Display\n        array={persons}\n        newSearch={newSearch}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}